/*
    Задача 1 (5 баллов)

    1. Реализовать класс BatchIterator<T>, который позволяет итерироваться по произвольной коллекции IEnumerable<T>
    батчами фиксированного размера. При этом класс не должен хранить все создаваемые им батчи, их нужно создавать отложенно.
    Предлагается самостоятельно продумать методы класса так, чтобы им было удобно пользоваться.
    2. Написать с помощью NUnit тесты на класс BatchIterator<T>.
    
    Пример сценария использования: допустим, у нас есть большой массив файлов, которые необходимо прочитать, скопировать
    в память и что-то с ними сделать. Все файлы одновременно в память не влезут, а читать их по одному (например, из сети)
    тоже неоптимально. Мы знаем, что одновременно в память влезут BatchSize файлов и хотим использовать класс BatchIterator<T>
    для удобной обработки этих файлов.
    В реализации вам пригодится ключевое слово yield.

    Задача 2 (5 баллов)

    Пусть у нас есть класс, определяющий некоторый документ:

    public class Document
    {
        public string Title { get; init; }
        public DateTime CreatedUtc { get; init; }
        public string ClassName { get; init; }
    }

    Предлагается реализовать метод
    public (List<Document>, List<Document>) SplitTrainTest(List<Document> documents, double trainSize)
    который позволяет разбить выборку documents на две части — обучающую и тестовую — в пропорции, заданной параметром trainSize.
    Разбиение должно быть случайным и воспроизводимым независимо от порядка элементов в исходном массиве. Для воспроизводимости
    предлагается отсортировать массив по названию документа и дате его создания.
    В задаче предлагается максимально использовать методы LINQ.


    Мягкий дедлайн: 16.04.2022 23:59
    Жесткий дедлайн: 12.05.2022 23:59
*/
